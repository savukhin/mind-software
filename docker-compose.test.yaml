version: "3.9"
services:
  nats:
    image: nats
    entrypoint: /nats-server
    command: "-js -m 5555"
    ports:
      - 4222:4222
      - 5555:5555
    networks: [ "test_network" ]
  # nats:
  #   image: 'bitnami/nats:latest'
  #   ports:
  #     - 4222:4222
  #     - 6222:6222
  #     - 8222:8222
  #     - 5555:5555
  # redis-master:
  #   image: 'bitnami/redis:latest'
  #   ports:
  #     - '6379'
  #   environment:
  #     - REDIS_REPLICATION_MODE=master
  #     - REDIS_PASSWORD=mindsoftware_pass
  #   volumes:
  #     - './volumes/redis:/bitnami'
  postgresnode:
    image: postgres:15
    container_name: postgresnode
    restart: always
    environment:
      POSTGRES_PASSWORD: mindsoftware
      POSTGRES_USER: mindsoftware
      POSTGRES_DB: mindsoftware
    volumes:
      - ./volumes/db:/var/lib/postgresql/data
    # ports:
    #   - "5431:5432"
    networks: [ "test_network" ]
  postgresnode2:
    image: postgres:15
    container_name: postgresnode2
    restart: always
    environment:
      POSTGRES_PASSWORD: mindsoftware
      POSTGRES_USER: mindsoftware
      POSTGRES_DB: mindsoftware
    volumes:
      - ./volumes/db:/var/lib/postgresql/data
    # ports:
    #   - "5430:5432"
    networks: [ "test_network" ]
  app:
    build: ./mind-software
    # container_name: backend
    restart: always
    ports:
      - 2112:2112
    depends_on:
      - postgresnode
      - nats
    environment:
      REDIS_IP: "redis-master"
      REDIS_PASSWORD: "mindsoftware_pass"

      POSTGRES_IPS: "postgresnode,postgresnode2"
      POSTGRES_PORT: "5432"
      POSTGRES_PASSWORD: mindsoftware
      POSTGRES_USER: mindsoftware
      POSTGRES_DB: mindsoftware

      NATS_URL: nats://nats:4222
    networks: [ "test_network" ]
    # deploy:
    #   mode: replicated
    #   replicas: 1
  publisher:
    build: ./publisher
    # container_name: backend
    restart: always
    depends_on:
      - postgresnode
      - nats
    environment:
      NATS_URL: nats://nats:4222
    networks: [ "test_network" ]


networks:
   test_network:
        driver: bridge